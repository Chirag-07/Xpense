{"ast":null,"code":"import firebase from 'firebase/app'; //let db = firebase.firestore();\n\nasync function doCreateUserWithEmailAndPassword(email, password, firstName, lastName) {\n  await firebase.auth().createUserWithEmailAndPassword(email, password); // .then(function(user){\n  // \tconsole.log(user)\n  // \tlet data = {\n  // \t\tfirstName: firstName,\n  // \t\tlastName : lastName,\n  // \t\temail : email\n  // \t  };\n  // \t  let setDoc = firebase.firestore().collection('users').doc(user.uid).set(data);\t\n  // \t  console.log(setDoc)\t  \n  //   }).catch(function(error) {\n  //   });\n\n  var user = firebase.auth().currentUser;\n  console.log(currentUser);\n  firebase.auth().currentUser.updateProfile({\n    displayName: firstName + \" \" + lastName\n  });\n}\n\nasync function doChangePassword(email, oldPassword, newPassword) {\n  let credential = firebase.auth.EmailAuthProvider.credential(email, oldPassword);\n  await firebase.auth().currentUser.reauthenticateWithCredential(credential);\n  await firebase.auth().currentUser.updatePassword(newPassword);\n  await doSignOut();\n}\n\nasync function doSignInWithEmailAndPassword(email, password) {\n  await firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nasync function doSocialSignIn(provider) {\n  let socialProvider = null;\n\n  if (provider === 'google') {\n    socialProvider = new firebase.auth.GoogleAuthProvider();\n  } else if (provider === 'facebook') {\n    socialProvider = new firebase.auth.FacebookAuthProvider();\n  }\n\n  await firebase.auth().signInWithPopup(socialProvider);\n}\n\nasync function doPasswordReset(email) {\n  await firebase.auth().sendPasswordResetEmail(email);\n}\n\nasync function doPasswordUpdate(password) {\n  await firebase.auth().updatePassword(password);\n}\n\nasync function doSignOut() {\n  await firebase.auth().signOut();\n}\n\nexport { doCreateUserWithEmailAndPassword, doSocialSignIn, doSignInWithEmailAndPassword, doPasswordReset, doPasswordUpdate, doSignOut, doChangePassword };","map":{"version":3,"sources":["/Users/vedadnya_98/Downloads/CS-554-master 2/react_third_lecture/firebase-auth/src/firebase/FirebaseFunctions.js"],"names":["firebase","doCreateUserWithEmailAndPassword","email","password","firstName","lastName","auth","createUserWithEmailAndPassword","user","currentUser","console","log","updateProfile","displayName","doChangePassword","oldPassword","newPassword","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","doSignOut","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSocialSignIn","provider","socialProvider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","signOut"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB,C,CACA;;AAEA,eAAeC,gCAAf,CAAgDC,KAAhD,EAAuDC,QAAvD,EAAiEC,SAAjE,EAA6EC,QAA7E,EAAuF;AACtF,QAAML,QAAQ,CAACM,IAAT,GAAgBC,8BAAhB,CAA+CL,KAA/C,EAAsDC,QAAtD,CAAN,CADsF,CAEtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIK,IAAI,GAAGR,QAAQ,CAACM,IAAT,GAAgBG,WAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAT,EAAAA,QAAQ,CAACM,IAAT,GAAgBG,WAAhB,CAA4BG,aAA5B,CAA0C;AAAEC,IAAAA,WAAW,EAAET,SAAS,GAAC,GAAV,GAAcC;AAA7B,GAA1C;AACA;;AAED,eAAeS,gBAAf,CAAgCZ,KAAhC,EAAuCa,WAAvC,EAAoDC,WAApD,EAAiE;AAChE,MAAIC,UAAU,GAAGjB,QAAQ,CAACM,IAAT,CAAcY,iBAAd,CAAgCD,UAAhC,CAA2Cf,KAA3C,EAAkDa,WAAlD,CAAjB;AACA,QAAMf,QAAQ,CAACM,IAAT,GAAgBG,WAAhB,CAA4BU,4BAA5B,CAAyDF,UAAzD,CAAN;AACA,QAAMjB,QAAQ,CAACM,IAAT,GAAgBG,WAAhB,CAA4BW,cAA5B,CAA2CJ,WAA3C,CAAN;AACA,QAAMK,SAAS,EAAf;AACA;;AAED,eAAeC,4BAAf,CAA4CpB,KAA5C,EAAmDC,QAAnD,EAA6D;AAC5D,QAAMH,QAAQ,CAACM,IAAT,GAAgBiB,0BAAhB,CAA2CrB,KAA3C,EAAkDC,QAAlD,CAAN;AACA;;AAED,eAAeqB,cAAf,CAA8BC,QAA9B,EAAwC;AACvC,MAAIC,cAAc,GAAG,IAArB;;AACA,MAAID,QAAQ,KAAK,QAAjB,EAA2B;AAC1BC,IAAAA,cAAc,GAAG,IAAI1B,QAAQ,CAACM,IAAT,CAAcqB,kBAAlB,EAAjB;AACA,GAFD,MAEO,IAAIF,QAAQ,KAAK,UAAjB,EAA6B;AACnCC,IAAAA,cAAc,GAAG,IAAI1B,QAAQ,CAACM,IAAT,CAAcsB,oBAAlB,EAAjB;AACA;;AACD,QAAM5B,QAAQ,CAACM,IAAT,GAAgBuB,eAAhB,CAAgCH,cAAhC,CAAN;AACA;;AAED,eAAeI,eAAf,CAA+B5B,KAA/B,EAAsC;AACrC,QAAMF,QAAQ,CAACM,IAAT,GAAgByB,sBAAhB,CAAuC7B,KAAvC,CAAN;AACA;;AAED,eAAe8B,gBAAf,CAAgC7B,QAAhC,EAA0C;AACzC,QAAMH,QAAQ,CAACM,IAAT,GAAgBc,cAAhB,CAA+BjB,QAA/B,CAAN;AACA;;AAED,eAAekB,SAAf,GAA2B;AAC1B,QAAMrB,QAAQ,CAACM,IAAT,GAAgB2B,OAAhB,EAAN;AACA;;AAED,SACChC,gCADD,EAECuB,cAFD,EAGCF,4BAHD,EAICQ,eAJD,EAKCE,gBALD,EAMCX,SAND,EAOCP,gBAPD","sourcesContent":["import firebase from 'firebase/app';\n//let db = firebase.firestore();\n\nasync function doCreateUserWithEmailAndPassword(email, password, firstName , lastName) {\n\tawait firebase.auth().createUserWithEmailAndPassword(email, password)\n\t// .then(function(user){\n\t// \tconsole.log(user)\n\t// \tlet data = {\n\t// \t\tfirstName: firstName,\n\t// \t\tlastName : lastName,\n\t// \t\temail : email\n\t// \t  };\n\t// \t  let setDoc = firebase.firestore().collection('users').doc(user.uid).set(data);\t\n\t// \t  console.log(setDoc)\t  \n\t//   }).catch(function(error) {\n\t//   });\n\tvar user = firebase.auth().currentUser;\n\tconsole.log(currentUser)\n\tfirebase.auth().currentUser.updateProfile({ displayName: firstName+\" \"+lastName });\n}\n\nasync function doChangePassword(email, oldPassword, newPassword) {\n\tlet credential = firebase.auth.EmailAuthProvider.credential(email, oldPassword);\n\tawait firebase.auth().currentUser.reauthenticateWithCredential(credential);\n\tawait firebase.auth().currentUser.updatePassword(newPassword);\n\tawait doSignOut();\n}\n\nasync function doSignInWithEmailAndPassword(email, password) {\n\tawait firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nasync function doSocialSignIn(provider) {\n\tlet socialProvider = null;\n\tif (provider === 'google') {\n\t\tsocialProvider = new firebase.auth.GoogleAuthProvider();\n\t} else if (provider === 'facebook') {\n\t\tsocialProvider = new firebase.auth.FacebookAuthProvider();\n\t}\n\tawait firebase.auth().signInWithPopup(socialProvider);\n}\n\nasync function doPasswordReset(email) {\n\tawait firebase.auth().sendPasswordResetEmail(email);\n}\n\nasync function doPasswordUpdate(password) {\n\tawait firebase.auth().updatePassword(password);\n}\n\nasync function doSignOut() {\n\tawait firebase.auth().signOut();\n}\n\nexport {\n\tdoCreateUserWithEmailAndPassword,\n\tdoSocialSignIn,\n\tdoSignInWithEmailAndPassword,\n\tdoPasswordReset,\n\tdoPasswordUpdate,\n\tdoSignOut,\n\tdoChangePassword\n};\n"]},"metadata":{},"sourceType":"module"}