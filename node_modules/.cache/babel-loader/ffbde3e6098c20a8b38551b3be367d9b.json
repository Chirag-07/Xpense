{"ast":null,"code":"var _jsxFileName = \"/Users/vedadnya_98/Documents/GitHub/Xpense/firebase-auth/src/components/Profile.js\";\nimport React from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport SignOutButton from './SignOut';\nimport '../App.css';\nimport ChangePassword from './ChangePassword';\nimport { AuthContext } from \"../firebase/Auth\";\nimport { useEffect, useContext, useState } from 'react';\nimport { getUser, updateProfilePic, updateAccountInfo, getAllColleges } from '../firebase/FirestoreFunctions'; //datepicker imports\n\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers'; //import for toggle button\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch'; //import for dropdown material ui\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { FormLabel } from 'react-bootstrap'; //import { stat } from 'fs-extra';\n\nconst defpic = require('../assets/default-avatar.png');\n\nfunction Profile() {\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [change, setChange] = useState(false);\n  const [profPic, setProfPic] = useState();\n  const [profPicUrl, setProfPicUrl] = useState();\n  const [formSubmit, setFormSubmit] = useState(false);\n  const [dob, setDob] = useState();\n  const [currentStudent, setCurrentStudent] = useState(false);\n  const [collegeList, setCollegeList] = useState();\n  const [collegeSelected, setCollegeSelected] = useState();\n  useEffect(() => {\n    async function getData() {\n      try {\n        console.log(\"enter useeffect func\");\n        let u = await getUser(currentUser.uid);\n        setLoading(false);\n        setUser(u);\n        console.log(\"fetched user details\");\n        let allColleges = await getAllColleges();\n        setCollegeList(allColleges);\n        console.log('fetched college list');\n        console.log(allColleges);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    getData();\n  }, [currentUser, profPicUrl, formSubmit]); //onChange handler for input field of profile picture\n\n  const handleChange = async event => {\n    event.preventDefault();\n\n    if (event.target.files[0]) {\n      const profilePicture = event.target.files[0];\n      setProfPic(profilePicture);\n    }\n  }; //submit function for profile picture form\n\n\n  const handleUpload = async event => {\n    event.preventDefault();\n    var metadata = {\n      contentType: 'image/jpeg'\n    };\n    var storageRef = firebase.storage().ref();\n    const storage = firebase.storage(); //var profilePictureRef = storageRef.child(`images/${profPic.name}`).put(profPic, metadata);\n\n    const uploadTask = storage.ref(`/profilePics/${profPic.name}`).put(profPic);\n    console.log('img uploaded'); // Listen for state changes, errors, and completion of the upload.\n\n    uploadTask.on('state_changed', snapShot => {\n      //takes a snap shot of the process as it is happening\n      console.log(snapShot);\n    }, err => {\n      //catches the errors\n      console.log(err);\n    }, () => {\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      storage.ref('profilePics').child(profPic.name).getDownloadURL().then(fireBaseUrl => {\n        //setProfPicUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n        setProfPicUrl(fireBaseUrl);\n\n        try {\n          updateProfilePic(currentUser.uid, fireBaseUrl);\n        } catch (error) {\n          alert(error);\n        }\n\n        console.log('firebase url is' + fireBaseUrl);\n      });\n    });\n  }; //change handler for form input\n\n\n  const handleDateChange = async date => {\n    //event.preventDefault();\n    setDob(date);\n  }; //change handler for toggle button\n\n\n  const handleToggleChange = async event => {\n    setCurrentStudent(!currentStudent);\n  }; //change handler for college list dropdown  button\n\n\n  const handleDropdownChange = async event => {\n    setCollegeSelected(event.target.value);\n  }; //function to update account details of the user\n\n\n  const handleAccountUpdate = async event => {\n    event.preventDefault();\n    console.log('entering update acc func'); //await updateAccountInfo(currentUser.uid,firstName,lastName);\n\n    let {\n      firstName,\n      lastName,\n      dob,\n      collegeSelect\n    } = event.target.elements;\n    const first = firstName.value;\n    const last = lastName.value;\n    const dateOfBirth = dob.value; //let selectedCollegeId=collegeSelect.value;\n\n    let selectedCollegeId;\n\n    if (!currentStudent) {\n      selectedCollegeId = '';\n    } else {\n      selectedCollegeId = collegeSelect.value;\n    }\n\n    let status = currentStudent; //console.log(accountInfoForm)\n\n    console.log(\"form data \" + first + \"  \" + last + dateOfBirth + \" \" + selectedCollegeId + status);\n\n    if (first && last) {\n      try {\n        await updateAccountInfo(currentUser.uid, first, last, dateOfBirth, selectedCollegeId, status);\n        setFormSubmit(true);\n      } catch (error) {\n        alert(error);\n      }\n    } else alert('enter all info');\n  }; //component code\n\n\n  if (!loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/university\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }, \"TESTTSGG\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }, \"Profile Page\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }\n    }, user && user.photoURL ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 32\n      }\n    }, \"Profile Picture\", /*#__PURE__*/React.createElement(\"img\", {\n      src: user.photoURL,\n      alt: \"profilePic\",\n      height: \"100\",\n      width: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 50\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 128\n      }\n    }, \"Default Picture\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 146\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: defpic,\n      alt: \"defaultpic\",\n      height: \"100\",\n      width: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 152\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        border: '3px solid black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, \"Change profile picture\")), user ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"First Name: \", user.firstName, \"  \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 48\n      }\n    }), \"Last Name: \", user.lastName) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 89\n      }\n    }, \"NOT GETTING USER DATA\"), user && user.posts ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, \"MY POSTS: \", user.posts.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 8\n        }\n      }, \"Post Details: \", item.title, \" : \", item.value), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 8\n        }\n      }, \"Post Description: \", item.description));\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 20\n      }\n    }, \"NOT GETTING any posts\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }\n    }, \"Edit account info\"), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"accountInfoForm\",\n      name: \"accountInfoForm\",\n      onSubmit: handleAccountUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 6\n      }\n    }, \"First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      id: \"firstName\",\n      name: \"firstName\",\n      placeholder: \"Enter your first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 6\n      }\n    }, \"Last Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      id: \"lastName\",\n      name: \"lastName\",\n      placeholder: \"Enter your last name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      margin: \"normal\",\n      id: \"dob\",\n      name: \"dob\",\n      label: \"Enter date of birth\",\n      format: \"MM/dd/yyyy\",\n      value: dob,\n      required: true,\n      onChange: handleDateChange,\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 8\n      }\n    }))), currentStudent ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, \"Are you a current student\"), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: currentStudent,\n        onChange: handleToggleChange,\n        name: \"yes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 20\n        }\n      }),\n      label: \"Yes\",\n      labelPlacement: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 10\n      }\n    }))), /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"collegeListDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }, \"Select your college\"), /*#__PURE__*/React.createElement(Select, {\n      style: {\n        width: '300px'\n      },\n      labelId: \"collegeListDropdown\",\n      id: \"collegeSelect\",\n      name: \"collegeSelect\",\n      autoWidth: \"true\",\n      onChange: handleDropdownChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, collegeList && collegeList.map(item => {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        value: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 12\n        }\n      }, item.name);\n    }))))) : /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }, \"Are you a current student\"), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: currentStudent,\n        onChange: handleToggleChange,\n        name: \"yes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 20\n        }\n      }),\n      label: \"Yes\",\n      labelPlacement: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 10\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 6\n      }\n    }, \"Apply changes\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }\n    }), change ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChangePassword, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 20\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setChange(!change),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 39\n      }\n    }, \"Hide\")) : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setChange(!change),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 104\n      }\n    }, \"Click to Change Password\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 182\n      }\n    }), /*#__PURE__*/React.createElement(SignOutButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 5\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 5\n      }\n    }, \"Profile Loading...\"));\n  }\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/vedadnya_98/Documents/GitHub/Xpense/firebase-auth/src/components/Profile.js"],"names":["React","firebase","SignOutButton","ChangePassword","AuthContext","useEffect","useContext","useState","getUser","updateProfilePic","updateAccountInfo","getAllColleges","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","FormGroup","FormControlLabel","Switch","InputLabel","MenuItem","FormHelperText","FormControl","Select","FormLabel","defpic","require","Profile","currentUser","user","setUser","loading","setLoading","change","setChange","profPic","setProfPic","profPicUrl","setProfPicUrl","formSubmit","setFormSubmit","dob","setDob","currentStudent","setCurrentStudent","collegeList","setCollegeList","collegeSelected","setCollegeSelected","getData","console","log","u","uid","allColleges","e","handleChange","event","preventDefault","target","files","profilePicture","handleUpload","metadata","contentType","storageRef","storage","ref","uploadTask","name","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","error","alert","handleDateChange","date","handleToggleChange","handleDropdownChange","value","handleAccountUpdate","firstName","lastName","collegeSelect","elements","first","last","dateOfBirth","selectedCollegeId","status","photoURL","border","posts","map","item","title","description","width","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport SignOutButton from './SignOut';\nimport '../App.css';\nimport ChangePassword from './ChangePassword';\nimport { AuthContext } from \"../firebase/Auth\";\nimport { useEffect, useContext, useState } from 'react';\nimport { getUser, updateProfilePic, updateAccountInfo, getAllColleges } from '../firebase/FirestoreFunctions';\n\n//datepicker imports\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n\tMuiPickersUtilsProvider,\n\tKeyboardTimePicker,\n\tKeyboardDatePicker,\n} from '@material-ui/pickers';\n//import for toggle button\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n//import for dropdown material ui\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { FormLabel } from 'react-bootstrap';\n//import { stat } from 'fs-extra';\n\n\n\nconst defpic = require('../assets/default-avatar.png')\n\nfunction Profile() {\n\tconst { currentUser } = useContext(AuthContext);\n\tconst [user, setUser] = useState();\n\tconst [loading, setLoading] = useState(true);\n\tconst [change, setChange] = useState(false);\n\tconst [profPic, setProfPic] = useState();\n\tconst [profPicUrl, setProfPicUrl] = useState();\n\tconst [formSubmit, setFormSubmit] = useState(false);\n\tconst [dob, setDob] = useState();\n\tconst [currentStudent, setCurrentStudent] = useState(false);\n\tconst [collegeList, setCollegeList] = useState();\n\tconst [collegeSelected, setCollegeSelected] = useState();\n\n\tuseEffect(() => {\n\n\t\tasync function getData() {\n\t\t\ttry {\n\t\t\t\tconsole.log(\"enter useeffect func\")\n\t\t\t\tlet u = await getUser(currentUser.uid);\n\t\t\t\tsetLoading(false)\n\t\t\t\tsetUser(u);\n\t\t\t\tconsole.log(\"fetched user details\")\n\t\t\t\tlet allColleges = await getAllColleges();\n\t\t\t\tsetCollegeList(allColleges);\n\t\t\t\tconsole.log('fetched college list');\n\t\t\t\tconsole.log(allColleges);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e)\n\t\t\t}\n\t\t}\n\t\tgetData();\n\t}, [currentUser, profPicUrl, formSubmit]);\n\n\n\n\t//onChange handler for input field of profile picture\n\tconst handleChange = async (event) => {\n\t\tevent.preventDefault();\n\t\tif (event.target.files[0]) {\n\t\t\tconst profilePicture = event.target.files[0];\n\t\t\tsetProfPic(profilePicture);\n\t\t}\n\t}\n\n\t//submit function for profile picture form\n\tconst handleUpload = async (event) => {\n\t\tevent.preventDefault();\n\t\tvar metadata = {\n\t\t\tcontentType: 'image/jpeg'\n\t\t};\n\t\tvar storageRef = firebase.storage().ref();\n\t\tconst storage = firebase.storage();\n\t\t//var profilePictureRef = storageRef.child(`images/${profPic.name}`).put(profPic, metadata);\n\t\tconst uploadTask = storage.ref(`/profilePics/${profPic.name}`).put(profPic);\n\t\tconsole.log('img uploaded');\n\n\t\t// Listen for state changes, errors, and completion of the upload.\n\t\tuploadTask.on('state_changed',\n\t\t\t(snapShot) => {\n\t\t\t\t//takes a snap shot of the process as it is happening\n\t\t\t\tconsole.log(snapShot)\n\t\t\t}, (err) => {\n\t\t\t\t//catches the errors\n\t\t\t\tconsole.log(err)\n\t\t\t}, () => {\n\t\t\t\t// gets the functions from storage refences the image storage in firebase by the children\n\t\t\t\t// gets the download url then sets the image from firebase as the value for the imgUrl key:\n\t\t\t\tstorage.ref('profilePics').child(profPic.name).getDownloadURL()\n\t\t\t\t\t.then(fireBaseUrl => {\n\t\t\t\t\t\t//setProfPicUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n\t\t\t\t\t\tsetProfPicUrl(fireBaseUrl);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tupdateProfilePic(currentUser.uid, fireBaseUrl);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\talert(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log('firebase url is' + fireBaseUrl);\n\t\t\t\t\t})\n\n\t\t\t})\n\n\t}\n\n\t//change handler for form input\n\tconst handleDateChange = async (date) => {\n\t\t//event.preventDefault();\n\t\tsetDob(date);\n\n\t}\n\t//change handler for toggle button\n\tconst handleToggleChange = async (event) => {\n\t\tsetCurrentStudent(!currentStudent);\n\t}\n\t//change handler for college list dropdown  button\n\tconst handleDropdownChange = async (event) => {\n\t\tsetCollegeSelected(event.target.value);\n\t}\n\n\t//function to update account details of the user\n\tconst handleAccountUpdate = async (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log('entering update acc func');\n\t\t//await updateAccountInfo(currentUser.uid,firstName,lastName);\n\t\tlet { firstName, lastName, dob, collegeSelect } = event.target.elements;\n\t\tconst first = firstName.value;\n\t\tconst last = lastName.value;\n\t\tconst dateOfBirth = dob.value;\n\t\t//let selectedCollegeId=collegeSelect.value;\n\t\tlet selectedCollegeId;\n\t\tif(!currentStudent) {\n\t\t\tselectedCollegeId='';\n\t\t} else {\n\t\t selectedCollegeId = collegeSelect.value\n\t\t}\n\t\tlet status=currentStudent;\n\t\t//console.log(accountInfoForm)\n\t\tconsole.log(\"form data \" + first + \"  \" + last + dateOfBirth + \" \" + selectedCollegeId + status);\n\t\tif (first && last) {\n\t\t\ttry {\n\t\t\t\tawait updateAccountInfo(currentUser.uid, first, last, dateOfBirth, selectedCollegeId,status);\n\t\t\t\tsetFormSubmit(true);\n\t\t\t} catch (error) {\n\t\t\t\talert(error);\n\t\t\t}\n\t\t} else alert('enter all info');\n\n\t};\n\n\t//component code\n\tif (!loading) {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<a href=\"/university\">TESTTSGG</a>\n\t\t\t\t<h2>Profile Page</h2>\n\t\t\t\t<div className=\"profile\">\n\t\t\t\t\t{/* <img src={defaultPic} height=\"100\" widht=\"100\"/> */}\n\t\t\t\t\t{user && user.photoURL ? (<p>Profile Picture<img src={user.photoURL} alt='profilePic' height=\"100\" width=\"100\" /></p>) : (<p>Default Picture<br /><img src={defpic} alt='defaultpic' height=\"100\" width=\"100\" /></p>)}\n\t\t\t\t\t<form onSubmit={handleUpload}>\n\t\t\t\t\t\t<input type='file' onChange={handleChange} />\n\t\t\t\t\t\t<button style={{ border: '3px solid black' }}>Change profile picture</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t{user ? (<p>First Name: {user.firstName}  <br />Last Name: {user.lastName}</p>) : (<p>NOT GETTING USER DATA</p>)}\n\t\t\t\t\t{user && user.posts ? (<div>MY POSTS: {user.posts.map((item) => {\n\t\t\t\t\t\treturn (<div>\n\t\t\t\t\t\t\t<p>Post Details: {item.title} : {item.value}</p>\n\t\t\t\t\t\t\t<p>Post Description: {item.description}</p>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t})}</div>) : (<p>NOT GETTING any posts</p>)}\n\t\t\t\t</div>\n\n\t\t\t\t<h2>Edit account info</h2>\n\t\t\t\t<form id=\"accountInfoForm\" name=\"accountInfoForm\" onSubmit={handleAccountUpdate}>\n\t\t\t\t\t<label for=\"firstName\">First Name:</label>\n\t\t\t\t\t<input required type=\"text\" id=\"firstName\" name=\"firstName\" placeholder=\"Enter your first name\" />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<label for=\"lastName\">Last Name:</label>\n\t\t\t\t\t<input required type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Enter your last name\" />\n\t\t\t\t\t<br>\n\t\t\t\t\t</br>\n\t\t\t\t\t{/* material ui date picker for dob */}\n\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t\t\t<Grid container justify=\"flex-start\">\n\t\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tid=\"dob\"\n\t\t\t\t\t\t\t\tname=\"dob\"\n\t\t\t\t\t\t\t\tlabel=\"Enter date of birth\"\n\t\t\t\t\t\t\t\tformat=\"MM/dd/yyyy\"\n\t\t\t\t\t\t\t\tvalue={dob}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\t\t\t'aria-label': 'change date',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</MuiPickersUtilsProvider>\n\n\n\n\n\t\t\t\t\t{/*Todo: input field for college name if user is a current student */}\n\n\t\t\t\t\t{currentStudent ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Are you a current student</FormLabel>\n\n\t\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tcontrol={<Switch checked={currentStudent} onChange={handleToggleChange} name=\"yes\" />}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Yes\" labelPlacement=\"end\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t\t<FormGroup  row>\n\t\t\t\t\t\t\t\t<InputLabel id=\"collegeListDropdown\">Select your college</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tstyle={{ width: '300px' }}\n\t\t\t\t\t\t\t\t\tlabelId=\"collegeListDropdown\"\n\t\t\t\t\t\t\t\t\tid=\"collegeSelect\"\n\t\t\t\t\t\t\t\t\tname=\"collegeSelect\"\n\t\t\t\t\t\t\t\t\tautoWidth=\"true\"\n\t\t\t\t\t\t\t\t\tonChange={handleDropdownChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{collegeList && collegeList.map((item) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={item.id}>{item.name}</MenuItem>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Are you a current student</FormLabel>\n\n\t\t\t\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tcontrol={<Switch checked={currentStudent} onChange={handleToggleChange} name=\"yes\" />}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Yes\" labelPlacement=\"end\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</FormControl>)}\n\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<button type='submit'>Apply changes</button>\n\t\t\t\t</form>\n\t\t\t\t\n\t\t\t\t<br></br>\n\t\t\t\t{change ? <div><ChangePassword /> <button onClick={() => setChange(!change)}>Hide</button></div> : <button onClick={() => setChange(!change)}>Click to Change Password</button>} <br />\n\t\t\t\t<SignOutButton />\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Profile Loading...</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}