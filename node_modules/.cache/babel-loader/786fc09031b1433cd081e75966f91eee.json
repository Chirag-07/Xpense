{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport firebaseApp from './Firebase';\nlet db = firebaseApp.firestore();\n\nasync function doCreateUserWithEmailAndPassword(email, password, firstName, lastName) {\n  await firebase.auth().createUserWithEmailAndPassword(email, password);\n  var user = firebase.auth().currentUser;\n  let data = {\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    dob: new Date(),\n    collegeId: '',\n    status: '',\n    photoURL: '',\n    posts: []\n  };\n  let setDoc = await db.collection('users').doc(user.uid).set(data);\n  console.log(setDoc);\n  firebase.auth().currentUser.updateProfile({\n    displayName: String(firstName) + \" \" + String(lastName)\n  });\n}\n\nasync function doChangePassword(email, oldPassword, newPassword) {\n  let credential = firebase.auth.EmailAuthProvider.credential(email, oldPassword);\n  await firebase.auth().currentUser.reauthenticateWithCredential(credential);\n  await firebase.auth().currentUser.updatePassword(newPassword);\n  await doSignOut();\n}\n\nasync function doSignInWithEmailAndPassword(email, password) {\n  await firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nasync function doSocialSignIn(provider) {\n  let socialProvider = null;\n\n  if (provider === 'google') {\n    socialProvider = new firebase.auth.GoogleAuthProvider();\n  } else if (provider === 'facebook') {\n    socialProvider = new firebase.auth.FacebookAuthProvider();\n  }\n\n  await firebase.auth().signInWithPopup(socialProvider).then(function (result) {\n    console.log(result);\n    const displayName = result.user.displayName.split(\" \");\n    let data = {\n      firstName: displayName[0],\n      lastName: displayName[1],\n      email: result.user.email,\n      dob: new Date(),\n      collegeId: '',\n      status: '',\n      photoURL: '',\n      posts: []\n    };\n    let setDoc = db.collection('users').doc(result.user.uid).set(data);\n  }).catch(function (error) {\n    console.log(error.message);\n  });\n}\n\nasync function doPasswordReset(email) {\n  await firebase.auth().sendPasswordResetEmail(email);\n}\n\nasync function doPasswordUpdate(password) {\n  await firebase.auth().updatePassword(password);\n}\n\nasync function doSignOut() {\n  await firebase.auth().signOut();\n}\n\nexport { doCreateUserWithEmailAndPassword, doSocialSignIn, doSignInWithEmailAndPassword, doPasswordReset, doPasswordUpdate, doSignOut, doChangePassword };","map":{"version":3,"sources":["/Users/vedadnya_98/Documents/GitHub/Xpense/firebase-auth/src/firebase/FirebaseFunctions.js"],"names":["firebase","firebaseApp","db","firestore","doCreateUserWithEmailAndPassword","email","password","firstName","lastName","auth","createUserWithEmailAndPassword","user","currentUser","data","dob","Date","collegeId","status","photoURL","posts","setDoc","collection","doc","uid","set","console","log","updateProfile","displayName","String","doChangePassword","oldPassword","newPassword","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","doSignOut","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSocialSignIn","provider","socialProvider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","then","result","split","catch","error","message","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","signOut"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport firebaseApp from './Firebase'\n\nlet db  = firebaseApp.firestore();\n\nasync function doCreateUserWithEmailAndPassword(email, password, firstName , lastName) {\n\tawait firebase.auth().createUserWithEmailAndPassword(email, password)\n\tvar user = firebase.auth().currentUser;\n\tlet data = {\n\t\tfirstName: firstName,\n\t\tlastName : lastName,\n\t\temail : email,\n\t\tdob : new Date(),\n\t\tcollegeId : '',\n\t\tstatus : '',\n\t\tphotoURL : '',\n\t\tposts : []\n\t  };\n\t  let setDoc = await db.collection('users').doc(user.uid).set(data);\t\n\t  console.log(setDoc)\t  \n\tfirebase.auth().currentUser.updateProfile({ displayName: String(firstName)+\" \"+String(lastName) });\n}\n\nasync function doChangePassword(email, oldPassword, newPassword) {\n\tlet credential = firebase.auth.EmailAuthProvider.credential(email, oldPassword);\n\tawait firebase.auth().currentUser.reauthenticateWithCredential(credential);\n\tawait firebase.auth().currentUser.updatePassword(newPassword);\n\tawait doSignOut();\n}\n\nasync function doSignInWithEmailAndPassword(email, password) {\n\tawait firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nasync function doSocialSignIn(provider) {\n\tlet socialProvider = null;\n\tif (provider === 'google') {\n\t\tsocialProvider = new firebase.auth.GoogleAuthProvider()\n\t} else if (provider === 'facebook') {\n\t\tsocialProvider = new firebase.auth.FacebookAuthProvider();\n\t}\n\tawait firebase.auth().signInWithPopup(socialProvider).then(function(result) {\n\t\tconsole.log(result)\n\t\tconst displayName = result.user.displayName.split(\" \")\n\t\tlet data = {\n\t\t\tfirstName: displayName[0],\n\t\t\tlastName : displayName[1],\n\t\t\temail : result.user.email,\n\t\t\tdob : new Date(),\n\t\t\tcollegeId : '',\n\t\t\tstatus : '',\n\t\t\tphotoURL : '',\n\t\t\tposts : []\n\t\t  };\n\t\t  let setDoc = db.collection('users').doc(result.user.uid).set(data);\t\n\t  }).catch(function(error) {\n\t\tconsole.log(error.message)\n\t  });\n}\n\nasync function doPasswordReset(email) {\n\tawait firebase.auth().sendPasswordResetEmail(email);\n}\n\nasync function doPasswordUpdate(password) {\n\tawait firebase.auth().updatePassword(password);\n}\n\nasync function doSignOut() {\n\tawait firebase.auth().signOut();\n}\n\nexport {\n\tdoCreateUserWithEmailAndPassword,\n\tdoSocialSignIn,\n\tdoSignInWithEmailAndPassword,\n\tdoPasswordReset,\n\tdoPasswordUpdate,\n\tdoSignOut,\n\tdoChangePassword\n};\n"]},"metadata":{},"sourceType":"module"}